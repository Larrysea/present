<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.present.courseList.dao.TeacherCourseDao">
    <resultMap type="com.present.courseList.dao.entity.TeacherCourse" id="teacherCourseMap">
        <!-- 老师课程数据id -->
        <id column="id" property="id"/>
        <!-- 老师id -->
        <result column="teacher_id" property="teacherId"/>
        <!-- 课程id -->
        <result column="course_id" property="courseId"/>
        <!-- 数据状态 -->
        <result column="data_state" property="dataState"/>
    </resultMap>

    <!-- 将数据插入数据库中 -->
    <insert id="insert" parameterType="com.present.courseList.dao.TeacherCourse">
        INSERT INTO
        teacher_course (
        id,
        teacher_id,
        course_id,
        data_state)
        VALUES (
        #{id},
        #{teacherId},
        #{courseId},
        #{dataState})
    </insert>

    <!-- 根据key查找数据库中信息 -->
    <select id="queryByKey" resultMap="teacherCourseMap">
        SELECT
        *
        FROM
        teacher_course
        <where>
            id = #{id}
        </where>
    </select>

    <!-- 根据key更新数据库中信息 -->
    <update id="updateByKey">
        Update
        teacher_course
        <set>
            <if test=" teacherId != null ">
                teacher_id = #{teacherId},
            </if>
            <if test=" courseId != null ">
                course_id = #{courseId},
            </if>
            <if test=" dataState != null ">
                data_state = #{dataState}
            </if>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <!-- 根据Key删除数据库中信息 -->
    <delete id="deleteByKey">
        DELETE FROM
        teacher_course
        <where>
            id = #{id}
        </where>
    </delete>


    <resultMap type="TeacherCourseList" id="resultTeacherCourseMap">
        <collection property="courseList" ofType="com.present.course.bean.Course" column="teacher_id">
            <id property="id" column="id"/>
            <result property="course_name" column="course_name"/>

        </collection>
    </resultMap>

    <select id="queryCourseByTeacherId"
            resultMap="resultTeacherCourseMap">
        SELECT
        courseList.id,
        courseList.course_name
        FROM
        courseList,
        teacher_course

        <where>
            courseList.id=teacher_course.course_id
            AND
            teacher_course.teacher_id=#{teacherId}
        </where>
    </select>

</mapper>